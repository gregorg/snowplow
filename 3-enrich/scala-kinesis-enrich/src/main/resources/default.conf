# Default Configuration for Scala Kinesis Enrich.

enrich {
  # Sources currently supported are:
  # 'kinesis' for reading Thrift-serialized records from a Kinesis stream
  # 'kafka' for reading Thrift-serialized records from a Kafka topic
  # 'stdin' for writing Base64-encoded Thrift-serialized records to stdout
  source = "kinesis"

  # Sinks currently supported are:
  # 'kinesis' for writing enriched records to a Kinesis stream
  # 'kafka' for writing enriched records to a Kafka topic
  # 'stdouterr' for writing enriched records
  #    events to stdout and invalid events to stderr.
  #    Using `sbt assembly` and `java -jar` is recommended to disable sbt
  #    logging.
  sink = "kinesis"

  aws {
    access-key: "cpf"
    secret-key: "cpf"
  }

  # Kinesis streams
  streams {
    in: {
      raw: "SnowplowRaw"
    }
    out: {
      enriched: "SnowplowEnriched"
      enriched_shards: 1 # Number of shards to use if created.
      bad: "SnowplowBad" # Not used until #463
      bad_shards: 1 # Number of shards to use if created.
    }

    # `app-name` is used for a DynamoDB table to maintain stream state.
    app-name: SnowplowKinesisEnrich-${enrich.streams.in.raw}

    # LATEST: most recent data.
    # TRIM_HORIZON: oldest available data.
    # Note: This only effects the first run of this application
    # on a stream.
    initial-position = "TRIM_HORIZON"

    endpoint: "https://kinesis.us-east-1.amazonaws.com"
  }

  # Kafka Streams
  kafka: {
    in: {
      zookeeper: "localhost:2181"
      topic: "snowplow-events"
	}
    out: {
      topic: "snowplow-enriched"
      brokers: "localhost:9092"
      async: true
      batch-size: 1
	}
  }

  enrichments {
    geo_ip: {
      enabled: true # false not yet suported
      maxmind_file: "/tmp/GeoLiteCity.dat"
    }
    anon_ip: {
      enabled: true
      anon_octets: 1 # Or 2, 3 or 4. 0 is same as enabled: false
    }
  }
}
